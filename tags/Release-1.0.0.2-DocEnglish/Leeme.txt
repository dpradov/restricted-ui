===============
 RestrictedUI: 
===============
Librería para limitar la interface de usuario en base a una política de seguridad

Cómo controlar la interface de usuario mediante una política establecida de manera declarativa, en base al rol o roles del usuario y al estado de la aplicación.

Introducción
**************
Una parte delicada de la implementación de la seguridad en aplicaciones, especialmente corporativas, consiste en determinar qué funcionalidad debe estar o no accesible al usuario en función de su rol, o qué elementos deben o no mostrarse.

Lo habitual es incluir en el código la lógica necesaria para ocultar o deshabilitar determinadas opciones, botones, etc, dependiendo del tipo de usuario que accede a la aplicación. Esto puede complicarse cuando aparte del tipo de usuario también debe tenerse en cuenta el estado en que se encuentra la aplicación, por ejemplo el estado de tramitación de una entidad.
Es bastante usual que esta política deba cambiar con cierta frecuencia, de la misma forma que deben evolucionar los requerimientos de las aplicaciones. Modificaciones en la estructura organizativa de la empresa, cambios en los protocolos de gestión de las unidades implicadas o simplemente la identificación de carencias tras el uso de la aplicación, entre otras causas, llevan a tener que hacer adaptaciones a esta lógica ligada a la interface.

En respuesta a esta problemática cabe también la opción de centralizar la definición de esta política, en un repositorio común a múltiples aplicaciones. En base a esta definición, soportada por un modelo de datos determinado, es posible definir una librería que utilicen las aplicaciones, y que haga posible modificar la política de seguridad sin necesidad de recompilar y redistribuir las aplicaciones. La idea principal es la siguiente: el programador desarrolla como si sólo hubiera un tipo de usuario, el administrador, con permisos para hacer cualquier cosa. Es la librería la que controla si debe impedirse un intento de hacer visible o de habilitar determinados controles.

Este enfoque es el que se usa actualmente en la empresa en la que trabajo. Aun ofreciendo gran flexibilidad en su concepción, la implementación concreta de la misma presenta desde mi punto de vista una serie de limitaciones y dificultades concretas que he intentado corregir con esta otra librería/arquitectura:

Características principales
******************************
Por un lado la librería / arquitectura que aquí se explica no obliga a centralizar la definición de esta seguridad, pero sí la contempla como un caso más; por otro lado para asegurar el cumplimiento de estas restricciones no es necesario obligar al programador a utilizar métodos ni propiedades específicas de la librería, que verifiquen si el cambio se permite o no, ni tiene que ser controlado por código a añadir; simplemente cualquier intento de hacer visible o habilitar cualquier elemento de interface supervisado que no sea admitido por la política de seguridad es interceptado e impedido. 
Se permite definir la política de restricciones no sólo en base a roles sino a estados de la aplicación, tanto en aplicaciones WinForms como Web; y para simplificar la definición de esta política se ofrece un formulario de mantenimiento, disponible tanto en tiempo de diseño como de ejecución.

Notas:
- No es objetivo de esta librería controlar la autenticación del usuario. Se asume que ésta es realizada correctamente y que se conoce, con garantías, el rol o roles que ostenta el usuario.
- El nombre de la librería, RestrictedUI, hace referencia al hecho de que ciertos elementos de la interface estarán restringidos según la seguridad establecida ('área restringida')

Más información:
http://code.google.com/p/restricted-ui/
